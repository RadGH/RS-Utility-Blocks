{"version":3,"file":"rs-utility-block-editor.js","mappings":"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","sources":["webpack://dm-dungeon/./assets/scripts/src/includes/utilities.js","webpack://dm-dungeon/./assets/scripts/src/settings/visibility.js","webpack://dm-dungeon/external window \"React\"","webpack://dm-dungeon/external window [\"wp\",\"blockEditor\"]","webpack://dm-dungeon/external window [\"wp\",\"components\"]","webpack://dm-dungeon/external window [\"wp\",\"compose\"]","webpack://dm-dungeon/external window [\"wp\",\"domReady\"]","webpack://dm-dungeon/external window [\"wp\",\"element\"]","webpack://dm-dungeon/external window [\"wp\",\"hooks\"]","webpack://dm-dungeon/webpack/bootstrap","webpack://dm-dungeon/webpack/runtime/compat get default export","webpack://dm-dungeon/webpack/runtime/define property getters","webpack://dm-dungeon/webpack/runtime/hasOwnProperty shorthand","webpack://dm-dungeon/webpack/runtime/make namespace object","webpack://dm-dungeon/./assets/scripts/src/rs-utility-block-editor.js"],"sourcesContent":["import {BaseControl, Button, ButtonGroup, SelectControl, ToggleControl} from \"@wordpress/components\";\n\nexport const sanitize_classes = function( classes ) {\n\t// Convert classes to a string if needed\n\tif ( typeof classes === 'undefined' ) classes = '';\n\telse if ( Array.isArray(classes) ) classes = classes.join(' ');\n\telse if ( typeof classes !== 'string' ) classes = '';\n\n\tif ( classes !== '' ) {\n\t\t// Remove extra spaces in the middle\n\t\tclasses = classes.replace(/  +/g, ' ');\n\n\t\t// Remove spaces at the beginning and end\n\t\tclasses = classes.trim();\n\t}\n\n\treturn classes;\n}\n\nexport const classes_to_array = function( classes ) {\n\tlet list;\n\n\tclasses = sanitize_classes( classes );\n\n\t// Convert to array, split at each space\n\tif ( typeof classes === 'string' ) {\n\t\tlist = classes.split(' ');\n\t}else if ( typeof classes === 'object' ) {\n\t\tlist = classes;\n\t}else{\n\t\tlist = [];\n\t}\n\n\t// Remove empty items\n\tif ( !! list ) {\n\t\tlist.filter((value) => { return value.trim() !== \"\"; });\n\t}\n\n\treturn list;\n}\n\nexport const has_class = function( classes, selected_class, choices = null ) {\n\t// classes: string or array of classes from the block: \"button-color--light is-style-outline\"\n\t// selected_class: the class being checked for: \"is-style-outline\"\n\t// choices: optional array of choices that can be selected\n\n\tif ( choices === null ) {\n\t\t// Simply check if a class is selected\n\t\tlet classList = classes_to_array( classes );\n\t\treturn classList.includes( selected_class );\n\t}else{\n\t\t// Check if a class is selected that exists in the list of choices\n\t\treturn get_class_from_choices( classes, choices ) === selected_class;\n\t}\n}\n\nexport const get_class_from_choices = function( classes, choices ) {\n\tlet classList = classes_to_array( classes );\n\tlet found_class = false;\n\tlet has_empty_choice = false;\n\n\tchoices.forEach(( choice ) => {\n\t\tif ( ! choice.value ) {\n\t\t\thas_empty_choice = true;\n\t\t}else if ( classList.includes( choice.value ) ) {\n\t\t\tfound_class = choice.value;\n\t\t}\n\t});\n\n\t// If no choice was selected by a blank value is available, return an empty string\n\tif ( ! found_class && has_empty_choice ) {\n\t\treturn '';\n\t}\n\n\treturn found_class;\n}\n\nexport const add_class = function( classes, new_class ) {\n\tclasses = sanitize_classes( classes );\n\n\tif ( ! has_class( classes, new_class ) ) {\n\t\tif ( classes ) classes += ' ';\n\t\tclasses += new_class;\n\t}\n\treturn classes;\n}\n\nexport const remove_class = function( classes, new_class ) {\n\tclasses = sanitize_classes( classes );\n\n\tlet classList = classes_to_array( classes );\n\n\tclassList.forEach(( class_name ) => {\n\t\tif ( class_name === new_class ) {\n\t\t\tclasses = classes.replace( class_name, '' );\n\t\t}\n\t});\n\n\treturn sanitize_classes( classes );\n}\n\n/**\n * Check if a class exists with a given prefix, and returns the value following the prefix.\n * If the prefix is \"gap-\" and classes contain \"gap-20\", returns \"20\".\n */\nexport const get_class_prefix_value = function( classes, prefix, has_value_class = '' ) {\n\n\t// If \"has_value_class\" is used, require that class also be set.\n\tif ( !! has_value_class && ! has_class( classes, has_value_class ) ) {\n\t\treturn false;\n\t}\n\n\tclasses = sanitize_classes( classes );\n\n\t// let matched = classes.match(/(^| )gap-(\\d+|none)( |$)/)[2];\n\n\tlet pattern = new RegExp('(^| )' + prefix + '([^ ]+)( |$)');\n\tlet matched = classes.match( pattern );\n\n\treturn matched !== null ? matched[2] : false;\n}\n\n/**\n * Remove all classes with a given prefix, except for the one specified as \"keep_class\"\n */\nexport const remove_prefixed_classes = function( classes, prefix, keep_class = false ) {\n\tclasses = sanitize_classes( classes );\n\n\tlet classList = classes_to_array( classes );\n\n\t// Check each class\n\tclassList.forEach(( class_name ) => {\n\t\t// Does this class have the prefix?\n\t\tif ( class_name.indexOf( prefix ) === 0 ) {\n\t\t\t// Should it be kept?\n\t\t\tif ( keep_class === false || class_name !== keep_class ) {\n\t\t\t\tclasses = remove_class( classes, class_name );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn classes;\n}\n\n/**\n * Add or remove a class based on a value.\n */\nexport const toggle_class = function( classes, new_class, value ) {\n\tclasses = sanitize_classes( classes );\n\n\tif ( !! value ) {\n\t\treturn add_class( classes, new_class );\n\t}else{\n\t\treturn remove_class( classes, new_class );\n\t}\n}\n\n/**\n * Set the class to the selected value, clearing any other classes with the same prefix.\n * Optionally toggles the \"has_value_class\" based on if a value is set.\n * @todo: Add support for blockType for each choice ?\n */\nexport const set_prefixed_class_from_list = function( classes, choices, value, prefix, has_value_class = '' ) {\n\t// classes: String list of current classes\n\t// choices: Array of values, each item must have a \".className\" property\n\t// value: Current value\n\t// prefix: Prefix for class name, if value is non-empty\n\t// has_value_class: Optional. If a value is present, this class is also added\n\n\tclasses = sanitize_classes( classes );\n\n\t// \"\" removes the class.\n\t// all other values, including \"0\" or \"none\", are added with a prefix.\n\tlet new_class = (value === \"\" ? false : prefix + value);\n\n\t// Remove other classes with the same prefix\n\tclasses = remove_prefixed_classes( classes, prefix, new_class );\n\n\tif ( new_class ) {\n\t\t// Add\n\t\tclasses = add_class( classes, new_class );\n\t\tif ( has_value_class ) classes = add_class( classes, has_value_class );\n\t}else{\n\t\t// Remove\n\t\tclasses = remove_class( classes, new_class );\n\t\tif ( has_value_class ) classes = remove_class( classes, has_value_class );\n\t}\n\n\tclasses = sanitize_classes( classes );\n\n\treturn classes;\n}\n\n/**\n * Set the class to the selected value, clearing other classes from the list of choices.\n * Does not support multiple values.\n * Optionally toggles the \"has_value_class\" based on if a value is set.\n */\nexport const set_class_from_list = function( classes, choices, value, has_value_class = '' ) {\n\t// classes: String list of current classes\n\t// choices: Array of choices, each item must have a \".className\" property\n\t// value: Current value\n\n\t// Get string of all classes\n\tclasses = sanitize_classes( classes );\n\n\t// Get the new class being added\n\tlet new_class = value || '';\n\n\t// Remove the class for each other option\n\tchoices.forEach(( choice ) => {\n\t\tif ( ! choice.value ) return;\n\n\t\t// Keep the class if it's the one we are adding\n\t\tif ( choice.value === new_class ) return;\n\n\t\t// If this class is assigned, remove it\n\t\tif ( has_class( classes, choice.value ) ) {\n\t\t\tclasses = remove_class( classes, choice.value );\n\t\t}\n\t});\n\n\t// Add or remove the \"has_value_class\" if there is a value\n\tif ( !! has_value_class ) {\n\t\tclasses = toggle_class( classes, has_value_class, !! new_class );\n\t}\n\n\t// Add the new class\n\tclasses = add_class( classes, new_class );\n\n\treturn classes;\n}\n\n/**\n * Set the classes of a block to the selected value, clearing any other classes with the same prefix.\n * Optionally toggles the \"has_value_class\" based on if a value is set.\n */\nexport const set_block_prefixed_class_from_list = function( props, choices, value, prefix, has_value_class = '' ) {\n\tprops.setAttributes({\n\t\tclassName: set_prefixed_class_from_list( props.attributes.className, choices, value, prefix, has_value_class )\n\t});\n}\n\n/**\n * Set the classes to the selected value for a block, clearing other classes from the list of choices.\n * Does not support multiple values.\n * Optionally toggles the \"has_value_class\" based on if a value is set.\n */\nexport const toggle_block_class = function( props, new_class, value ) {\n\tprops.setAttributes({\n\t\tclassName: toggle_class( props.attributes.className, new_class, value )\n\t});\n}\n\n/**\n * Set the classes to the selected value for a block, clearing other classes from the list of choices.\n * Does not support multiple values.\n * Optionally toggles the \"has_value_class\" based on if a value is set.\n */\nexport const set_block_class_from_list = function( props, choices, value, has_value_class = '', allow_null = false ) {\n\n\tif ( allow_null && value === get_class_from_choices( props.attributes.className, choices ) ) {\n\t\tvalue = '';\n\t}\n\n\tprops.setAttributes({\n\t\tclassName: set_class_from_list( props.attributes.className, choices, value, has_value_class )\n\t});\n}\n\n/**\n * Return an array of classes from the list of choices which are located in the class list.\n * If \"has_value_class\" is provided, only returns classes if that class is also present.\n * @todo: Add support for blockType for each choice ?\n */\nexport const find_class_from_list = function( classes, choices, has_value_class = null ) {\n\t// classes: String list of current classes\n\t// choices: Array of choices, each item must have a \".className\" property\n\t// value: Current value\n\n\t// If using \"has_value_class\", require that class to be present as well.\n\tif ( has_value_class !== null && ! has_class( classes, has_value_class ) ) {\n\t\treturn false;\n\t}\n\n\t// Get the list of classes\n\tlet classList = classes_to_array( classes );\n\tlet found_classes = [];\n\n\t// Check each class\n\tclassList.forEach(( class_name ) => {\n\t\t// Check each choice\n\t\tchoices.forEach(( choice ) => {\n\t\t\tif ( class_name === choice.value ) {\n\t\t\t\tfound_classes.push( class_name );\n\t\t\t}\n\t\t});\n\t});\n\n\treturn found_classes;\n}\n\n/**\n * Check if a block supports a given block type.\n * @param {string} block_name - The block name to check\n * @param {string|array} supported_blocks - The block type or types that are supported\n * @return {boolean} - True if the block is supported\n */\nexport const is_block_type_supported = function( block_name, supported_blocks ) {\n\tif ( supported_blocks === 'all' ) {\n\t\treturn true;\n\t}else if ( is_string_in_list( block_name, supported_blocks ) ) {\n\t\treturn supported_blocks.includes( block_name );\n\t}else{\n\t\treturn false;\n\t}\n}\n\n/**\n * Returns choices that match the block settings, by checking the blockType against each option.\n */\nexport const filter_block_choices = function( props, choices ) {\n\tlet block_name = props.name;\n\tlet filtered_choices = [];\n\n\t// Loop through each choice and check if the blockType is supported\n\tchoices.forEach(( choice ) => {\n\n\t\t// Check if the block is supported\n\t\tlet block_supported = is_block_type_supported( block_name, choice.blockType );\n\n\t\t/*\n\t\tif ( ! choice.blockType ) {\n\t\t\tblock_supported = true; // supported if blockType is not specified\n\t\t}else if ( choice.blockType === 'all' ) {\n\t\t\tblock_supported = true; // supported if blockType is \"all\"\n\t\t}else if ( is_string_in_list( block_name, choice.blockType ) ) {\n\t\t\tblock_supported = true; // supported if block name is in the blockType list (array or string)\n\t\t}\n\t\t*/\n\n\t\t// If the block is supported, add the choice to the list\n\t\tif ( block_supported ) {\n\t\t\tfiltered_choices.push( choice );\n\t\t}\n\n\t});\n\n\treturn filtered_choices;\n};\n\n/**\n * Check if a string value exists in an array of strings, or matches a single string.\n * If the input value is empty, returns false.\n */\nexport const is_string_in_list = function( value, list ) {\n\t// Value must be a non-empty string\n\tif ( typeof value !== 'string' || value === '' ) return false;\n\n\t// List may be an array of strings or a single string\n\tif ( Array.isArray( list ) ) {\n\t\treturn list.includes( value );\n\t}else{\n\t\treturn value === list;\n\t}\n}\n\n/**\n * Check if a block supports container styles.\n */\nexport const does_block_support_container_styles = ( name ) => {\n\treturn is_string_in_list( name, [\n\t\t'core/group',\n\t\t'core/columns',\n\t\t'core/cover'\n\t]);\n}\n\n/**\n * Check if a block supports mobile settings.\n */\nexport const does_block_support_mobile = ( name ) => {\n\treturn is_string_in_list( name, [\n\t\t'core/group',\n\t\t'core/columns',\n\t\t'core/buttons',\n\t\t'core/navigation'\n\t]);\n}\n\n/**\n * Check if a block supports button sizes.\n */\nexport const does_block_support_button_styles = ( name ) => {\n\treturn is_string_in_list( name, [\n\t\t'core/button',\n\t\t'sbi/company-tags',\n\t\t'sbi/company-actions',\n\t\t'sbi/company-review-button'\n\t]);\n}\n\n/**\n * Return a button grid component for the block editor, displaying a list of buttons that each toggle a class.\n * @todo: Add support for blockType for each choice\n */\nexport const get_button_grid_field = function( props, choices, name, label = '', cols = '', allow_null = true ) {\n\n\tlet debug = function( choice ) {\n\t\tconsole.log('button group', {\n\t\t\tvalue: choice.value,\n\t\t\tchoice: choice,\n\t\t\tis_primary: has_class(props.attributes.className, choice.value),\n\t\t\tis_secondary: !has_class(props.attributes.className, choice.value),\n\t\t});\n\t};\n\n\treturn (\n\t\t<BaseControl label={label} className={`rs-utility-blocks--button-group--container rs-utility-blocks--button-group--${name}`}>\n\t\t\t<ButtonGroup className=\"rs-utility-blocks--button-group\" data-cols={cols}>\n\t\t\t\t{choices.map(( choice ) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tisPrimary={has_class(props.attributes.className, choice.value, choices)}\n\t\t\t\t\t\tisSecondary={!has_class(props.attributes.className, choice.value, choices)}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tset_block_class_from_list( props, choices, choice.value, '', allow_null );\n\t\t\t\t\t\t\tdebug( choice );\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={choice.value}\n\t\t\t\t\t\t>\n\t\t\t\t\t{choice.label}\n\t\t\t\t\t</Button>\n\t\t\t\t))}\n\t\t\t</ButtonGroup>\n\t\t</BaseControl>\n\t);\n\n};\n\n\n/**\n * Return a select dropdown component for the block editor, displaying a list of options which toggle a class when selected.\n */\nexport const get_dropdown_field = function( props, choices, name, label = '' ) {\n\n\tconst filtered_choices = filter_block_choices( props, choices );\n\n\treturn (\n\t\t<SelectControl\n\t\t\tclassName={`rs-utility-blocks--dropdown rs-utility-blocks--dropdown--${name}`}\n\t\t\tlabel={label}\n\t\t\tvalue={get_class_from_choices( props.attributes.className, filtered_choices )}\n\t\t\toptions={filtered_choices}\n\t\t\tonChange={(value) => {\n\t\t\t\tset_block_class_from_list( props, filtered_choices, value, '', true )\n\t\t\t}}\n\t\t/>\n\t);\n\n};\n\n\n/**\n * Return a list of checkboxes as a component for the block editor\n * @param {object} props - The block props\n * @param {array} choices - An array of objects, each with a \"value\" and \"label\" property\n * @param {string} any_selection_class - An optional class to add if any choices are selected\n * @param {string} multiple_selection_class - An optional class to add if multiple choices are selected\n */\nexport const get_checkbox_field = function( props, choices, any_selection_class = '', multiple_selection_class = '' ) {\n\n\tlet checkboxes = [];\n\n\tchoices.forEach((choice) => {\n\t\tlet value = choice.value;\n\t\tlet class_name = value;\n\t\tlet label = choice.label;\n\t\tlet excluded_classes = choice.exclude || [];\n\n\t\tlet onChange = (value) => {\n\t\t\tlet classes = sanitize_classes( props.attributes.className );\n\n\t\t\tif ( ! value ) {\n\n\t\t\t\t// If not selected, remove the class\n\t\t\t\tclasses = remove_class( classes, class_name );\n\n\t\t\t}else{\n\n\t\t\t\t// If selected, add the class\n\t\t\t\tclasses = add_class( classes, class_name );\n\n\t\t\t\t// Remove classes that should be excluded\n\t\t\t\tif ( excluded_classes.length ) excluded_classes.forEach((exclude_class) => {\n\t\t\t\t\tclasses = remove_class( classes, exclude_class );\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\t// Toggle the any_selection_class if any choices are selected\n\t\t\tif ( any_selection_class || multiple_selection_class ) {\n\n\t\t\t\t// Get any classes that are part of the choices\n\t\t\t\tlet selected_choice_classes = find_class_from_list( classes, choices );\n\n\t\t\t\t// If any classes are selected, add the any_selection_class\n\t\t\t\tif ( any_selection_class ) {\n\t\t\t\t\tif ( selected_choice_classes.length ) {\n\t\t\t\t\t\tclasses = add_class( classes, any_selection_class );\n\t\t\t\t\t}else{\n\t\t\t\t\t\tclasses = remove_class( classes, any_selection_class );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If multiple classes are selected, add the multiple_selection_class\n\t\t\t\tif ( multiple_selection_class ) {\n\t\t\t\t\tif ( selected_choice_classes.length > 1 ) {\n\t\t\t\t\t\tclasses = add_class( classes, multiple_selection_class );\n\t\t\t\t\t}else{\n\t\t\t\t\t\tclasses = remove_class( classes, multiple_selection_class );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Save the classes\n\t\t\tprops.setAttributes({ className: classes });\n\t\t};\n\n\t\tcheckboxes.push(\n\t\t\t<ToggleControl\n\t\t\t\tlabel={label}\n\t\t\t\tchecked={has_class( props.attributes.className, value )}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t);\n\t});\n\n\treturn checkboxes;\n};","// Custom utilities\nimport {\n\tfind_class_from_list,\n\tget_checkbox_field\n} from \"../includes/utilities\";\n\n// Dependencies\nimport domReady from '@wordpress/dom-ready';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { addFilter } from '@wordpress/hooks';\n\n// Elements\nimport { InspectorControls } from \"@wordpress/block-editor\";\nimport { Fragment } from '@wordpress/element';\nimport { PanelBody } from '@wordpress/components';\n\ndomReady(() => {\n\n\tconst registerVisibilityField = createHigherOrderComponent(( BlockEdit ) => {\n\n\t\tconst any_selection_class = 'has-visibility';\n\t\tconst multiple_selection_class = 'has-multiple-visibility';\n\n\t\tconst choices = [\n\t\t\t{ value: 'hide-always'       , label: 'Hide everywhere', exclude: [] },\n\t\t\t{ value: 'hide-on-mobile'    , label: 'Hide on mobile', exclude: [ 'hide-on-desktop' ] },\n\t\t\t{ value: 'hide-on-desktop'   , label: 'Hide on desktop', exclude: [ 'hide-on-mobile' ] },\n\t\t\t{ value: 'hide-if-logged-in' , label: 'Hide if logged in', exclude: [ 'hide-if-not-logged-in' ] },\n\t\t\t{ value: 'hide-if-not-logged-in', label: 'Hide if logged not logged in', exclude: [ 'hide-if-logged-in' ] },\n\t\t\t{ value: 'hide-if-user-admin'     , label: 'Hide for admins', exclude: [ 'hide-if-user-not-admin' ] },\n\t\t\t{ value: 'hide-if-user-not-admin' , label: 'Hide for non-admins', exclude: [ 'hide-if-user-admin' ] },\n\t\t];\n\n\t\treturn (props) => {\n\t\t\tconst { name, setAttributes, isSelected } = props;\n\n\t\t\tlet classes = props.attributes.className || '';\n\n\t\t\tlet selected_classes = find_class_from_list( classes, choices );\n\n\t\t\tlet conditionsEnabled = selected_classes.length > 0;\n\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<BlockEdit {...props} />\n\n\t\t\t\t\t<InspectorControls>\n\n\t\t\t\t\t\t{ /* Display a list of checkboxes, collapsed unless an item is selected */ }\n\t\t\t\t\t\t{isSelected && (\n\n\t\t\t\t\t\t\t<PanelBody title=\"Visibility\" initialOpen={conditionsEnabled}>\n\t\t\t\t\t\t\t\t{ get_checkbox_field( props, choices, any_selection_class, multiple_selection_class ) }\n\t\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t};\n\n\t}, 'registerVisibilityField' );\n\n\taddFilter( 'editor.BlockEdit', 'rs_utility_blocks/register_visibility_field', registerVisibilityField, 30);\n\n} );","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Include functionality\nimport './settings/visibility.js';\n// import './settings/buttons.js';"],"names":["BaseControl","Button","ButtonGroup","SelectControl","ToggleControl","sanitize_classes","classes","Array","isArray","join","replace","trim","classes_to_array","list","split","filter","value","has_class","selected_class","choices","classList","includes","get_class_from_choices","found_class","has_empty_choice","forEach","choice","add_class","new_class","remove_class","class_name","get_class_prefix_value","prefix","has_value_class","pattern","RegExp","matched","match","remove_prefixed_classes","keep_class","indexOf","toggle_class","set_prefixed_class_from_list","set_class_from_list","set_block_prefixed_class_from_list","props","setAttributes","className","attributes","toggle_block_class","set_block_class_from_list","allow_null","find_class_from_list","found_classes","push","is_block_type_supported","block_name","supported_blocks","is_string_in_list","filter_block_choices","name","filtered_choices","block_supported","blockType","does_block_support_container_styles","does_block_support_mobile","does_block_support_button_styles","get_button_grid_field","label","cols","debug","console","log","is_primary","is_secondary","createElement","map","isPrimary","isSecondary","onClick","get_dropdown_field","options","onChange","get_checkbox_field","any_selection_class","multiple_selection_class","checkboxes","excluded_classes","exclude","length","exclude_class","selected_choice_classes","checked","domReady","createHigherOrderComponent","addFilter","InspectorControls","Fragment","PanelBody","registerVisibilityField","BlockEdit","isSelected","selected_classes","conditionsEnabled","title","initialOpen"],"sourceRoot":""}